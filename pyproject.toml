[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "obscura"
authors = [
  { name="Joakim Saario", email="saario.joakim@gmail.com" },
]
description = "Symmetric file encryption with Argon2-based passphrases"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Security :: Cryptography",
    "Environment :: Console"
]
dependencies = [
    "argon2-cffi",
    "cryptography"
]
dynamic = ["version", "readme"]

[project.scripts]
obscura = "obscura:main"

[project.urls]
Homepage = "https://github.com/jocke-l/obscura"
"Bug Tracker" = "https://github.com/jocke-l/obscura/issues"
Source = "https://github.com/jocke-l/obscura"

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"

[tool.hatch.build]
sources = ["src"]
skip-excluded-dirs = true

[tool.hatch.build.targets.wheel]
sources = ["src"]

[tool.ruff]
src = ["src", "tests"]
line-length = 88

fix = true
select = [
    "E",
    "F",
    "C90",
    "UP",
    "S",
    "BLE",
    "B",
    "A",
    "C4",
    "RET",
    "SIM",
    "ARG",
    "PTH",
    "ERA",
    "PL",
    "RUF"
]

target-version = "py38"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["S101"]

[tool.ruff.mccabe]
max-complexity = 4

[tool.ruff.isort]
known-first-party = ["src"]
combine-as-imports = true

[tool.mypy]
python_version = "3.8"
pretty = true
files = ["src", "tests"]

show_error_codes = true
no_implicit_reexport = true
strict_equality = true
strict_optional = true
check_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = false
local_partial_types = true

warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
  "argon2.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
python_files = "test_*.py tests.py"
addopts = "--cov --no-cov-on-fail"
pythonpath = "src"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["src", "tests"]
omit = [
  "*/__main__.py",
  "venv/*",
]

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = [
  "pragma: no cover",
  '^%s*\.\.\.',
]
fail_under = 100
